from "ecc/edwards" import add, negate;
from "ecc/babyjubjub" import G, EDWARDS_A, EDWARDS_D;

// Code to create test cases:
// https://github.com/Zokrates/pycrypto
def testDoubleViaAdd() -> bool {
    field[2] out = add(G, G, EDWARDS_A, EDWARDS_D);
    assert(out[0] == 17324563846726889236817837922625232543153115346355010501047597319863650987830);
    assert(out[1] == 20022170825455209233733649024450576091402881793145646502279487074566492066831);
    return true;
}

def testIdentities() -> bool {
    field[2] inf = [0, 1];
    assert(G == add(G, inf, EDWARDS_A, EDWARDS_D));
    
    field[2] nG = negate(G);
    field[2] nGaddG = add(G, nG, EDWARDS_A, EDWARDS_D);

    assert(inf == nGaddG);
    return true;
}

def main() {
    assert(testDoubleViaAdd());
    assert(testIdentities());
}
